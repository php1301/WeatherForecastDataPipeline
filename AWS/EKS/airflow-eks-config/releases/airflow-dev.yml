apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: airflow
  namespace: dev
  annotations:
    flux.weave.works/automated: "true"
spec:
  releaseName: airflow-dev
  chart:
    repository: https://marclamberti.github.io/airflow-eks-helm-chart
    name: airflow
    version: 1.0.0
  values:
    images:
      airflow:
        repository: "358718373286.dkr.ecr.us-east-1.amazonaws.com/wfdp-docker-eks-dev"
        tag: "5626fb9b"
    # use to encrypt connection of airflow to Database
    fernetKey: "zTxhk7FuGqQVPZVoukLn5bGWOrgHzhQnBnaqAItcZGI="
    defaultAirflowTag: "1.10.11-python3.7"
    env:
      - name: "AIRFLOW__KUBERNETES__DAGS_IN_IMAGE"
        value: "True"
      - name: "AIRFLOW__KUBERNETES__NAMESPACE"
        value: "dev"
      - name: "AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY"
        value: "apache/airflow"
      - name: "AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG"
        value: "1.10.11-python3.7"
      - name: "AIRFLOW__KUBERNETES__RUN_AS_USER"
        value: "50000"
      - name: "AIRFLOW__CORE__LOAD_EXAMPLES"
        value: "True"
      # - name: "AIRFLOW__WEBSERVER__BASE_URL"
      #   value: "http://localhost:8080/airflow-dev"
      - name: "AIRFLOW__WEBSERVER__WEB_SERVER_SSL_CERT"
        value: "/opt/airflow/certs/tls.crt"
      - name: "AIRFLOW__WEBSERVER__WEB_SERVER_SSL_KEY"
        value: "/opt/airflow/certs/tls.key"    
      # - name: "AIRFLOW__CORE__DAGS_FOLDER"
      #   value: "/opt/airflow/dags"
    executor: "KubernetesExecutor"
    ingress:
        enabled: true
        # web:
        #   path: "airflow-dev"    
    webserver:
        livenessProbe:
          scheme: "HTTPS"
        readinessProbe: 
          scheme: "HTTPS"
        extraVolumes:
          - name: "certs"
            secret: 
              secretName: "airflow-ssl"
        extraVolumeMounts:
          - name: "certs"
            mountPath: "opt/airflow/certs"
            readOnly: true